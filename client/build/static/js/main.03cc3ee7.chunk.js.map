{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","ethereum_address","require","baseURL","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","root","padding","border","margin","marginBottom","button","progress","textAlign","App","classes","React","useState","image","name","description","properties","senderAddress","senderAddressValid","isValid","transactionHash","uri","selectedFile","isInProgress","values","setValues","handleChange","event","valueIns","target","value","updateValues","handleChangeForProperty","handleChangeForPropertyRarity","rarity","onChangeHandler","files","validateForm","style","CircularProgress","className","Paper","noValidate","autoComplete","TextField","required","id","label","onChange","variant","multiline","rowsMax","e","isAddress","error","helperText","paddingLeft","type","Button","disabled","color","onClick","jsonGenerator","reqBody","FormData","append","JSON","stringify","url","axios","post","then","successResp","console","log","data","status","toString","toLowerCase","txHash","window","open","alert","message","catch","errResp","href","fontSize","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03cc3ee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar ethereum_address = require('ethereum-address');\n\n// const baseURL = \"http://192.168.1.81:5000/\";\nconst baseURL = \"/\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n  root: {\n    padding: theme.spacing(3, 3),\n    border: \"1px solid grey\",\n    width: \"567px\",\n    margin: \"auto\",\n    marginBottom: \"10px\"\n  },\n  button: {\n    width: \"100%\",\n    marginTop: \"10px\"\n  },\n  progress: {\n    margin: theme.spacing(2),\n    textAlign: \"center\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    image: '',\n    name: '',\n    description: '',\n    properties: {\n      \"Origin\": \"\",\n      \"Special Ability\": \"\",\n      \"rarity\": {\n        \"name\": \"\",\n        \"value\": \"\",\n        \"display_value\": \"\"\n      }\n    },\n    senderAddress: '',\n    senderAddressValid: false,\n    isValid: false,\n    transactionHash: '',\n    uri: '',\n    selectedFile: null,\n    isInProgress: false\n  });\n\n  const handleChange = name => event => {\n\n    let valueIns = { ...values };\n    valueIns[name] = event.target.value;\n    updateValues(valueIns);\n  };\n\n\n  const handleSenderAddress = () => (e) => {\n\n    const senderAddressValid = ethereum_address.isAddress(e.target.value);\n\n    let valueIns = { ...values };\n    valueIns[\"senderAddress\"] = e.target.value;\n    valueIns.senderAddressValid = senderAddressValid;\n    updateValues(valueIns);\n  }\n\n  const handleChangeForProperty = name => event => {\n\n    let valueIns = { ...values };\n    valueIns.properties[name] = event.target.value;\n    updateValues(valueIns);\n  };\n\n  const handleChangeForPropertyRarity = name => event => {\n\n    let valueIns = { ...values };\n    valueIns.properties.rarity[name] = event.target.value;\n    updateValues(valueIns);\n  };\n\n  const onChangeHandler = event => {\n\n    let valueIns = { ...values };\n    valueIns.selectedFile = event.target.files[0];\n    updateValues(valueIns);\n  }\n\n  const updateValues = function (valueIns) {\n    valueIns.isValid = validateForm(valueIns);\n\n    setValues({ ...valueIns });\n  }\n\n  const validateForm = function (valueIns) {\n    return valueIns.selectedFile && valueIns.name && valueIns.description && valueIns.properties[\"Origin\"] && valueIns.senderAddress && valueIns.senderAddressValid\n      && valueIns.properties[\"Special Ability\"] && valueIns.properties[\"rarity\"][\"name\"] && valueIns.properties[\"rarity\"][\"display_value\"] && valueIns.properties[\"rarity\"][\"value\"];\n  }\n\n  const createToken = () => (e) => {\n    setValues({ ...values, isInProgress: true });\n    const jsonGenerator = { ...values };\n    delete jsonGenerator[\"isValid\"];\n    delete jsonGenerator[\"transactionHash\"];\n    delete jsonGenerator[\"uri\"];\n    delete jsonGenerator[\"selectedFile\"];\n    // const reqBody = {\n    //   jsonGenerator,\n    //   senderAddress, senderPassword\n    // }\n\n\n    let reqBody = new FormData();\n    reqBody.append('jsonGenerator', JSON.stringify(jsonGenerator));\n    reqBody.append('senderAddress', values.senderAddress);\n    reqBody.append('image', values.selectedFile);\n    // reqBody.append('senderPassword', senderPassword);\n    const url = baseURL + \"api/erc1155/create\";\n    axios.post(url, reqBody).then(function (successResp) {\n      console.log(\"successResp = \", successResp);\n      if (successResp.data.status.toString().toLowerCase() != \"success\") {\n        alert(successResp.data.message);\n        return;\n      }\n      const transactionHash = successResp.data.txHash;\n      const uri = successResp.data.uri;\n      const resetData = {\n        image: '',\n        name: '',\n        description: '',\n        properties: {\n          \"Origin\": \"\",\n          \"Special Ability\": \"\",\n          \"rarity\": {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"display_value\": \"\"\n          }\n        },\n        senderAddress: '',\n        senderAddressValid: false,\n        selectedFile: null\n      }\n      setValues({\n        ...values, transactionHash, uri, ...resetData\n      });\n      window.open(\"https://ropsten.etherscan.io/tx/\" + transactionHash, '_blank');\n\n    }).catch(function (errResp) {\n      console.log(\"errResp = \", errResp);\n    })\n\n\n  }\n\n  const formDesign = function () {\n    return (\n      <Paper className={classes.root}>\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              required\n              id=\"properties-origin-input-image\"\n              label=\"Properties Origin\"\n              className={classes.textField}\n              value={values.properties[\"Origin\"]}\n              onChange={handleChangeForProperty('Origin')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"properties-special-ability-input-image\"\n              label=\"Properties Special Ability\"\n              className={classes.textField}\n              value={values.properties[\"Special Ability\"]}\n              onChange={handleChangeForProperty('Special Ability')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"properties-rarity-name-image\"\n              label=\"Properties Rarity Name\"\n              className={classes.textField}\n              value={values.properties.rarity[\"name\"]}\n              onChange={handleChangeForPropertyRarity('name')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"properties-rarity-value-image\"\n              label=\"Properties Rarity Value\"\n              className={classes.textField}\n              value={values.properties.rarity[\"value\"]}\n              onChange={handleChangeForPropertyRarity('value')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"properties-rarity-display_value-image\"\n              label=\"Properties Rarity Display Value\"\n              className={classes.textField}\n              value={values.properties.rarity[\"display_value\"]}\n              onChange={handleChangeForPropertyRarity('display_value')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"description-input-name\"\n              label=\"Name\"\n              className={classes.textField}\n              value={values.name}\n              onChange={handleChange('name')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"description-input-id\"\n              label=\"Description\"\n              className={classes.textField}\n              value={values.description}\n              onChange={handleChange('description')}\n              margin=\"normal\"\n              variant=\"outlined\"\n              multiline\n              rowsMax=\"4\"\n            />\n          </div>\n\n          <div>\n            <TextField\n              required\n              id=\"sender-address-input-image\"\n              label=\"Sender Address\"\n              className={classes.textField}\n              value={values.senderAddress}\n              onChange={handleSenderAddress()}\n              margin=\"normal\"\n              variant=\"outlined\"\n              error={values.senderAddress && !values.senderAddressValid ? true : false}\n              helperText={values.senderAddress && !values.senderAddressValid ? \"Enter valid sender address\" : \"\"}\n            />\n          </div>\n\n          <div style={{ paddingLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n            <input type=\"file\" name=\"file\" onChange={onChangeHandler} />\n          </div>\n\n          <div>\n            <Button disabled={!values.isValid} variant=\"contained\" color=\"primary\" className={classes.button} onClick={createToken()}>\n              Create Token\n        </Button>\n          </div>\n        </form>\n\n        {\n          (!values.transactionHash || !values.uri) ? null :\n            <div>\n              <br />\n              <a href={values.uri} target=\"_blank\">Click here to view character info</a>\n              <br />\n              <div style={{ color: \"red\", fontSize: \"16px\" }}>Transaction Hash: {values.transactionHash}</div>\n            </div>\n\n        }\n      </Paper>\n\n    )\n  }\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>ERC115</h1>\n      {\n        values.isInProgress ? <CircularProgress className={classes.progress} /> : formDesign()\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}